{%- macro schedule(width, height, left, top, class='schedule') -%}
<div style="position:absolute; width: {{ width }}; height: {{ height }}; left: {{ left }}; top: {{ top }}; font-size: 18pt;">
<?php

// custom calendar code based on GCalPHP, Mark Stillwell <m.stillwell@cranfield.ac.uk>

/////////
//Configuration
//

// FIXME: move config data up to index.php
//  "6ciph13spq4rmq28shlai1s83s@group.calendar.google.com"
$calendars = array(
  "amac.cranfield%40googlemail.com",
  "p2t1d9qvbg69lq59klqng5dc6s%40group.calendar.google.com",
  "ls6tjllu1ko99fl9j3vm1kpmio%40group.calendar.google.com",
  "e85187a6fn6jc818bp9mphgpmk%40group.calendar.google.com",
  "hhn8pbbqdhur0r7pq1vh1m31m8%40group.calendar.google.com");

// Date format you want your details to appear
$dateformat="j F Y"; // 10 March 2009 - see http://www.php.net/date for details
$timeformat="G:i"; // 12.15am

date_default_timezone_set('Europe/London');

// What happens if there's nothing to display
$event_error="";

// The separate date header is here
$GroupByDate=true;

$items_to_show=20;
$max_days_in_future = 7;

// ...and here's where you tell it to use a cache.
// > touch gcal.xml
// > chmod 666 gcal.xml
// > touch -t 01101200 gcal.xml
// If you don't need this, or this is all a bit complex, change this to 'false'
$use_cache = false;

//
//End of configuration block
/////////

class Event {
  public $startTime = null;
  public $endTime = null;
  public $location = null;
  public $title = null;
  public function Event($startTime, $endTime, $title, $location) {
    $this->startTime = $startTime;
    $this->endTime   = $endTime;
    $this->title     = $title;
    $this->location  = $location;
  }
}

$events = array();

foreach($calendars as $calendar) {

  // Form the XML address.
  $calendar_xml_address = "https://www.google.com/calendar/feeds/".$calendar."/public/full?singleevents=true&futureevents=true&max-results=".$items_to_show."&orderby=starttime&sortorder=a";

  if ($use_cache) {
        ////////
        //Cache
        //
       
        $cache_time = 3600*12; // 12 hours
        $cache_file = $_SERVER['DOCUMENT_ROOT'].'/gcal.xml'; //xml file saved on server
       
        if ($debug_mode) {echo "<P>Your cache is saved at ".$cache_file."</P>";}
       
        $timedif = @(time() - filemtime($cache_file));
 
        $xml = "";
        if (file_exists($cache_file) && $timedif < $cache_time) {
                if ($debug_mode) {echo "<P>I'll use the cache.</P>";}
                $str = file_get_contents($cache_file);
                $xml = simplexml_load_string($str);
        } else { //not here
                if ($debug_mode) {echo "<P>I don't have any valid cached copy.</P>";}
                $xml = simplexml_load_file($calendar_xml_address); //come here
                if ($f = fopen($cache_file, 'w')) { //save info
                        $str = $xml->asXML();
                        fwrite ($f, $str, strlen($str));
                        fclose($f);
                        if ($debug_mode) {echo "<P>Cache saved :)</P>";}
                } else { echo "<P>Can't write to the cache.</P>"; }
        }
       
        //done!
  } else {
    $xml = simplexml_load_file($calendar_xml_address);
  }

  $xml->asXML();

  foreach ($xml->entry as $entry){
    $ns_gd         = $entry->children('http://schemas.google.com/g/2005');
    $gCalStartTime = strtotime($ns_gd->when->attributes()->startTime);
    $gCalEndTime   = strtotime($ns_gd->when->attributes()->endTime);
    $gCalTitle     = trim($entry->title);               
    $gCalWhere     = trim($ns_gd->where->attributes()->valueString);
    if ($gCalEndTime > time() and $gCalStartTime < time() + $max_days_in_future * 24 * 60 * 60 and
        !in_array(strtolower($gCalTitle), 
            array('seminar slot', 'to be decided', 'tbd'))) {
      $events["$gCalStartTime $gCalEndTime $gCalWhere $gCalTitle"] = new Event($gCalStartTime, $gCalEndTime, $gCalTitle, $gCalWhere);
    }
  }
}

ksort($events);

$items_shown=0;
$lines_shown=0;
// FIXME: make variable...
$lines_to_show=20;
$old_start_date="";
$old_end_date="";

  echo "<table>";

  foreach ($events as $event){
    if ($items_to_show > 0 and $items_shown < $items_to_show and $lines_shown < $lines_to_show) {
      $startDate = date($dateformat, $event->startTime);
      $startTime = date($timeformat, $event->startTime);
      $endDate = date($dateformat, $event->endTime - 1);
      $endTime = date($timeformat, $event->endTime);
      if ($GroupByDate) {
        if ($startDate != $old_start_date || $endDate != $old_end_date) { 
          echo "      <tr><td colspan=\"4\"><b>$startDate";
          if ($startDate != $endDate) {
              echo " &mdash; $endDate ";
          }
          echo "</b></td></tr>\n"; 
          $old_start_date = $startDate;
          $old_end_date = $endDate;
          $lines_shown++;
        }
      }
      echo "<tr";
      if ($event->startTime <= time()) {
        echo " style=\"color: red;\"";
      }
      echo "><td style=\"padding: 0 5px 1px 0; vertical-align: top;\">"; 
    
      if ($startTime == $endTime && $startTime == "0:00") {
          echo "&nbsp;";
      } else {
          echo "$startTime";
      }
      echo "</td><td style=\"padding: 0 5px 1px 0; vertical-align: top;\">";
      if ($startTime == $endTime && $startTime == "0:00") {
          echo "&nbsp;";
      } else {
          echo "$endTime";
      }
      echo "</td><td style=\"padding: 0 5px 1px 0; vertical-align: top;\">" .  
        preg_replace('/\*(.*)\*/',
          '<div style="font-weight: bold;">${1}</div>', preg_replace('/\*\*(.*)\*\*/',
          '<div style="color: purple; font-weight: bold;">${1}</div>', 
          wordwrap($event->title, 40, "<br />"))) .
        "</td><td style=\"padding: 0 5px 1px 0; vertical-align: top;\">" .  wordwrap($event->location, 50, "<br />") .
        "</td></tr>\n";
      $items_shown++;
      $lines_shown++;
    }
  }

  if (!$items_shown) { echo "<tr><td>No events.</td></tr>"; }

  echo "</table>";
?>
{{ caller() }}</div>
{%- endmacro -%}
